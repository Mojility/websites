AWSTemplateFormatVersion: '2010-09-09'
Outputs:
  DomainName:
    Description: Public endpoint for website
    Value: !GetAtt SiteCDN.DomainName
  Bucket:
    Description: S3 bucket for content
    Value: !Ref SiteBucket
Resources:
  SiteBucket:
    Type: AWS::S3::Bucket

  CloudFrontOriginAccessIdentity:
    Type: 'AWS::CloudFront::CloudFrontOriginAccessIdentity'
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: !Ref SiteBucket

  SiteBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref SiteBucket
      PolicyDocument:
        Statement:
          - Action: "s3:GetObject"
            Effect: "Allow"
            Resource: !Sub 'arn:aws:s3:::${SiteBucket}/*'
            Principal:
              CanonicalUser: !GetAtt CloudFrontOriginAccessIdentity.S3CanonicalUserId

  SiteCDN:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        CustomErrorResponses:
          - ErrorCode: 403 # not found
            ResponseCode: 404
            ResponsePagePath: "/404.html"
        DefaultRootObject: "/index.html"
        HttpVersion: http2
        ViewerCertificate:
          AcmCertificateArn: arn:aws:acm:us-east-1:872061243621:certificate/4914b7ee-d5cf-4f41-b957-97fde10b6eb5
          SslSupportMethod: sni-only
        Enabled: true
        PriceClass: PriceClass_100
        DefaultCacheBehavior:
          TargetOriginId: SiteOriginBucket
          ViewerProtocolPolicy: redirect-to-https
          ForwardedValues:
            QueryString: false
        Origins:
          - Id: SiteOriginBucket
            DomainName: !GetAtt SiteBucket.DomainName
            S3OriginConfig:
              OriginAccessIdentity: !Sub 'origin-access-identity/cloudfront/${CloudFrontOriginAccessIdentity}'
